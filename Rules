#!/usr/bin/env ruby

### Preprocessing rules ######################################################

preprocess do

  def hide_assets
    items.each do |item|
      if item.identifier =~ /^\/assets/
        item[:is_hidden] = true
      end
    end
  end

  def generate_quick_reviews
    items.find { |i| i.identifier == '/reviews/' }[:quick_reviews].each do |quick_review|
      atributes  = quick_review.merge({ :quick => true, :partial => true })
      identifier = "/reviews/#{quick_review[:title].downcase.gsub(/[^a-z]+/, '-')}"
      items << Nanoc3::Item.new('', atributes, identifier)
    end
  end

  def delete_drafts
    items.delete_if { |i| i[:is_draft] }
  end

  hide_assets
  generate_quick_reviews
  delete_drafts

end

### Compilation rules ########################################################

compile '/assets/style/*' do
  filter :sass, :syntax => :scss, :style => :compressed
  filter :relativize_paths, :type => :css
end

compile '/sitemap_xml/' do
  filter :erb
end

compile '/404/' do
  filter :erb
end

compile '/assets/*/' do
end

compile '*' do
  next if item[:partial]

  if item[:markdown]
    filter :rdiscount
  else
    filter :erb
  end

  if item[:has_code]
    filter :colorize_syntax, :default_colorizer => :pygmentsrb
  end

  layout 'review' if @item[:kind] == 'review'

  layout 'default'
  filter :rubypants
  filter :relativize_paths, :type => :html
end

### Routing rules ############################################################

route '/404/' do
  '/error/404.php'
end

route '/sitemap_xml/' do
  '/sitemap.xml'
end

route '/assets/*' do
  version_part = item[:version] ? '-v' + item[:version].to_s : ''
  item.identifier[0..-2] + version_part + '.' + item[:extension]
end

route '*' do
  if item[:partial]
    nil
  else
    item.identifier + 'index.html'
  end
end

### Layouting rules ##########################################################

layout '*', :erb
