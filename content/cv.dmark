---
title: Denis Defreyne’s CV
---

#section %h{Experience}
  #section %h{Software Engineer, Movinga}
    #subtitle November 2017 – present

    #ul
      #li
        #p Migrated the infrastructure to an Infrastructure-as-Code setup, using Terraform and Ansible, making it easier to roll back erroneous changes, and improving consistency between similar pieces of infrastructure

      #li
        #p Introduced monitoring and alerting to the engineering department, using Prometheus, Alertmanager, and Grafana

      #li
        #p Removed large parts of unused infrastructure and improved resource usage of overprovisioned infrastructure, resulting in a 40–50%% decrease in infrastructure operating costs

      #li
        #p Tightened security across the board: set up firewall rules, eliminated non-HTTPS traffic, removed outdated infrastructure, introduced offboarding procedures and security incident response procedures, rereplaced custom authentication protocols (work in progress), restricted infrastructure access, and more

      #li
        #p Increased consistency and simplicity of deployment by consolidating all deployment onto the same container orchestration platform (AWS ECS)

      #li
        #p Introduced RFCs (requests for comment) to the engineering department as a way to collect feedback about proposed changes as early as possible

  #section %h{Software Engineer, SoundCloud}
    #subtitle June 2013 - November 2017 (4 years, 5 months)

    #ul
      #li
        #p Built a large part of the infrastructure for the %ref[url=https://on.soundcloud.com]{On SoundCloud} partner program, including a flexible logic engine to handle frequently-changing business needs

      #li
        #p Brought consistency to projects to improve maintenance and operations

      #li
        #p Mentored interns

      #li
        #p Improved stability and reduced the risk of changes causing outages, and ran workshops around stability and incident response

      #li
        #p Set up a central repository for organisation-wide technical documentation

      #li
        #p Introduced design documents to the team, now adopted company-wide

      #li
        #p Worked closely with the customer support team to improve their processes and tooling

  #section %h{Software Engineer, MediaGeniX NG}
    #subtitle September 2010 - May 2013 (2 years, 8 months)

    #ul
      #li
        #p Developed many features of %ref[url=http://mediagenix.tv]{MediaGeniX}’ %em{WHATS’On} broadcasting solution for VIMN subsidiaries such as MTV, Comedy Central and Nickelodeon for divisions in both Europe and Southeast Asia

      #li
        #p Performed two major %em{WHATS’On} upgrades for aforementioned clients

      #li
        #p Implemented the requirements for the introduction of WHATS’On to MTV Adria

  #section %h{Intern, Cyan Worlds}
    #subtitle 2009

    #p I worked with %ref[url=http://cyan.com/]{Cyan Worlds}, to improve the %ref[url=http://mystonline.com/en/]{Myst Online: Uru Live web site}.

    #ul
      #li
        #p Removed uses of Flash, redid the site in proper HTML, CSS and JavaScript, cleaned up the design, and improved maintainability

      #li
        #p Made the site multilingual and co-ordinated a handful of translation teams for Dutch, French, Spanish, Italian, Finnish and German

      #li
        #p Re-coded from scratch using Nanoc, thereby proving that Nanoc was capable of handling large and complex web sites

  #section %h{Intern, Netlog}
    #subtitle August 2009 - September 2009 (2 months)

    #ul
      #li
        #p Optimised an existing social network abuse detection system for use with %ref[url=http://netlog.com/]{Netlog}

      #li
        #p Investigated the applicability of this abuse detection system to real-world threats

  #section %h{Web Application Developer (student job), dotProjects}
    #subtitle July 2008 - August 2008 (1 month)

    #ul
      #li
        #p Developed a web-based machine translation system for large documents, both manually and with the help of machine translation

  #section %h{Web Application Developer (student job), dotProjects}
    #subtitle July 2007 - August 2007 (1 month)

    #ul
      #li
        #p Implemented several features, such as Flickr integration and advanced templating features

#section %h{Education}

  #section %h{Master in Computer Science, option Software Engineering, University of Ghent}
    #subtitle 2008 - 2010

    #p Dissertation: Design of a recommendation system for offering services on social network sites

  #section %h{Bachelor in Informatics, University of Ghent}
    #subtitle 2005 - 2009

#section %h{Personal projects}

  #section %h{Nanoc}
    #subtitle 2007 - present

    #p Nanoc is a flexible and fast static-site generator written in Ruby. Nanoc is used for the %ref[url=http://developer.github.com/]{GitHub developer documentation}, the %ref[url=https://developer.paypal.com/docs/]{PayPal developer documentation}, the %ref[url=https://docs.gitlab.com/]{GitLab documentation}, the %ref[url=https://prometheus.io/]{Prometheus web site}, the %ref[url=http://fosdem.org]{FOSDEM web site}, the %ref[url=https://flight-manual.atom.io/]{Atom Flight Manual}, Disney’s %ref[url=http://www.dadt.com/uglybetty/]{Ugly Betty} web site, and many more.

    #ul
      #li
        #p Led the development and implemented the vast majority of features

      #li
        #p Handled support requests and community contributions

      #li
        #p Created a small but enthusiastic community

  #section %h{Cri}
    #subtitle 2009 - present

    #p %ref[url=https://github.com/ddfreyne/cri]{Cri} is a framework for building command-line tools, written in Ruby. It was extracted from Nanoc, and is now used by many people outside of the context of Nanoc.

  #section %h{Miscellaneous (stable)}
    #p %ref[url=https://github.com/ddfreyne/adsf]{adsf} is a web server that you can launch instantly in any directory.

    #p %ref[url=https://github.com/ddfreyne/ddmemoize]{ddmemoize} implements memoization for Ruby.

    #p %ref[url=https://github.com/ddfreyne/ddmetrics]{ddmetrics} records and analyses runtime measurements for Ruby apps.

    #p %ref[url=https://github.com/ddfreyne/ddplugin]{ddplugin} is a Ruby library for handling plugins.

    #p %ref[url=https://github.com/ddfreyne/slow_enumerator_tools]{slow_enumerator_tools} supports merging, buffering, … Ruby enumerators.

  #section %h{Miscellaneous (experimental)}
    #p %ref[url=https://github.com/ddfreyne/d-mark]{d★mark} is a semantically-rich markup language for prose.

    #p %ref[url=https://github.com/ddfreyne/d-parse]{d★parse} is a parser combinator library for Ruby.

    #p %ref[url=https://github.com/ddfreyne/d-stream]{d★stream} allows writing stream-processing code in Ruby.

    #p %ref[url=https://github.com/ddfreyne/glove]{glove} is a game engine for Crystal.

    #p %ref[url=https://github.com/ddfreyne/rcpu]{rcpu} is a VM emulator and assembler written in Crystal.

    #p …

#section %h{Skills}
  #section %h{Spoken languages}
    #ul
      #li Dutch: Fluent
      #li English: Fluent
      #li German: Good
      #li French: Basic

  #section %h{Programming and markup languages}
    #table
      #tr
        #td ★★★
        #td (J)Ruby, JavaScript, HTML(5), CSS(3), JSON, Markdown, Crystal
      #tr
        #td ★★
        #td Scala, Go, Lua, Smalltalk
      #tr
        #td ★
        #td Swift, TypeScript, Objective-C, C, Rust, Clojure, Java, Python

  #section %h{Technologies}
    #table
      #tr
        #td ★★★
        #td Sinatra, MySQL, Git, HTTP, Nanoc, macOS, Linux, Unix, jQuery
      #tr
        #td ★★
        #td Hadoop, HDFS, Redshift, Tableau
      #tr
        #td ★
        #td Windows, PostgreSQL

#section %h{Miscellaneous}
  #section %h{Talks}
    #p I enjoy giving talks and try to do it often. Here is a list of talks I have given:

    #ul
      #li %ref[url=https://speakerdeck.com/ddfreyne/code-as-data]{Code as data} (2018)
      #li %ref[url=https://speakerdeck.com/ddfreyne/how-to-memoize]{How to memoize} (2018)
      #li %ref[url=https://speakerdeck.com/ddfreyne/clean-and-fast-code-with-enumerators]{Clean & fast code with enumerators} (2018)
      #li %ref[url=https://speakerdeck.com/ddfreyne/fibers]{Fibers} (2017)
      #li %ref[url=https://speakerdeck.com/ddfreyne/lets-create-a-programming-language-soundcloud-hq-edition]{Let’s create a programming language!} (2016)
      #li %ref[url=https://speakerdeck.com/ddfreyne/lets-write-a-parser-soundcloud-hq-edition]{Let’s write a parser!} (2016)
      #li %ref[url=https://speakerdeck.com/ddfreyne/taming-memory-performance-tuning-a-crystal-application-rug-b-edition]{Taming memory: performance-tuning a Crystal application} (2015)
      #li %ref[url=https://speakerdeck.com/ddfreyne/i-wanted-a-computer-but-all-i-got-was-a-transistor]{I wanted a computer, but all I got was a transistor} (2015)
      #li %ref[url=https://speakerdeck.com/ddfreyne/a-small-smalltalk-talk-rug-b-edition]{A Small Smalltalk talk} (2015)
      #li %ref[url=https://speakerdeck.com/ddfreyne/simulating-a-cpu-with-ruby]{Simulating a CPU with Ruby} (2015)
      #li %ref[url=https://speakerdeck.com/ddfreyne/creating-games-with-entities-and-components]{Creating games with entities and components} (2014)
      #li %ref[url=https://speakerdeck.com/ddfreyne/static-site-generation-for-the-masses]{Static site generation for the masses} (2013)
      #li %ref[url=https://speakerdeck.com/ddfreyne/extending-a-base-product-for-multiple-customers]{Extending a base product for multiple customers} (2012)
      #li Static sites with nanoc (2012)
      #li A Small Smalltalk Talk (2011)
      #li Make your web sites faster! (2009)
      #li Metaprogramming and DSLs in Ruby (2009)
