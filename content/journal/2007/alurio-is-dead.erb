<p>A long time ago, I started a project named Alurio, a chat system whose goal was to create an alternative to the mess otherwise known as IRC.</p>

<p>Today, I'm declaring Alurio dead. This shouldn't really come as a shock, considering there hasn't been a public release in over four years, and not even a private release for beta testers in many, many months.</p>

<p>Here's a few reasons why Alurio ultimately failed:</p>

<ul class="sentences">
	<li><p>There barely was any documentation. Half of the time I couldn't even figure out how the protocol (which I wrote myself) exactly worked.</p></li>

	<li><p>Alurio was way too complex. I actually surprised myself there, considering I'd take simplicity and minimalism over code bloat any day.</p></li>

	<li><p>I kept on rewriting parts that worked well enough. Many parts were rewritten, some twice, some even more than that.</p></li>
</ul>

<p>Etcetera. I promise not to make the same mistakes again.</p>

<p>On the bright side, the efforts I (and others) have put into Alurio have not completely gone to waste. Working on Alurio has given me <em>massive</em> amounts of programming experience. I had barely any knowledge of Cocoa when I started; now I do. As far as C is concerned, I now consider myself to be a semi-expert.</p>

<p>Then there's Lunkwill. Lunkwill is a small framework, written by Sam Rushing and myself, that makes handling network data a lot easier. It used to be part of the Alurio framework but now it's Alurio-independent.</p>

<p>Lunkwill sits on the presentation layer of the 7-layer OSI model. This means that you don't have to deal with sending and receiving raw bytes anymore; Lunkwill nicely abstracts all that.</p>

<p>I'm quite proud of Lunkwill. I plan on releasing it at some point, after I've put the finishing touches to the documentation and completed a few example Lunkwill-powered projects.</p>
