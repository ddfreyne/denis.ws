---
title: Denis’ toolbox
---

#p This page collects the tools that I use on a daily basis. I’ve left out common tools (Git, macOS, Docker, …) to highlight lesser-known things.

#section %h{Desktop apps}
  #section %h{For macOS}
    #dl
      #dt %ref[url=https://www.alfredapp.com/]{Alfred} (productivity app)
      #dd Alfred gives me the power to do all the things I want, right when I need them, without introducing clutter. I have a handful of custom workflows tuned for the way I work, which I imagine impresses my coworkers.

      #dt %ref[url=https://www.omnigroup.com/omnigraffle/]{OmniGraffle} (diagramming and drawing app)
      #dd It isn’t cheap, but I find the $100 price tag to be worth it. I use it to impress my coworkers.

      #dt %ref[url=https://www.spectacleapp.com/]{Spectacle} (window management app)
      #dd This is how I keep my windows nicely tiled.

  #section %h{Cross-platform}
    #dl
      #dt %ref[url=https://code.visualstudio.com/]{Visual Studio Code} (code editor)
      #dd I switched from %ref[url=https://atom.io/]{Atom}, which by itself is already an amazing piece of software, to Visual Studio Code, which is at the same level of awesomenes.

#section %h{Fonts}
  #dl
    #dt %ref[url=http://input.fontbureau.com/]{Input}
    #dd It’s pretty.

    #dt %ref[url=https://be5invis.github.io/Iosevka/]{Iosevka}
    #dd It’s pretty, and has ligatures.

#section %h{CLI tools}
  #dl
    #dt %ref[url=https://fishshell.com/]{fish}
    #dd A fast, easy-to-use shell that has sensible defaults. I have barely customised it.

    #dt %ref[url=https://github.com/BurntSushi/ripgrep]{ripgrep}
    #dd A fast search tool, similar to grep, ack. and ag.

    #dt %ref[url=https://github.com/BurntSushi/xsv]{xsv}
    #dd A must-have tool if you deal with CSV files.

#section %h{Ruby gems}
  #dl
    #dt %ref[url=https://github.com/hamstergem/hamster]{hamster}
    #dd Provides efficient immutable data structures (sometimes more efficient than built-in Ruby ones).

    #dt %ref[url=https://github.com/qrush/m]{m} (selective Test::Unit runner)
    #dd Useful when you want to only run specific Test::Unit test cases.

    #dt %ref[url=https://github.com/ruby-concurrency/ref]{ref}
    #dd Provides a soft ref implementation, which is indispensable for effective memoization.

    #dt %ref[url=http://rspec.info/]{rspec}
    #dd I feel lost without it.

    #dt %ref[url=http://rubocop.readthedocs.io/]{rubocop}
    #dd Indispensable when writing Ruby code. It pretty much eliminates all discussions about style.
